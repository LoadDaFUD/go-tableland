name: Generate binaries
on:
  release:
    types:
      - created
jobs:
  binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: api-linux-amd64.tar.gz
            compress_cmd: tar -czvf
            build_cmd: docker run -v $PWD:/data golang:1.19 bash -c "cd /data && go build ./cmd/api"
          - os: windows-latest
            asset_name: api-windows-amd64.zip
            compress_cmd: tar.exe -a -c -f
            build_cmd: go build -o api ./cmd/api
          - os: macos-latest
            asset_name: api-darwin-amd64.tar.gz
            compress_cmd: tar -czvf
            build_cmd: go build -o api ./cmd/api
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: v1.19.x
      - name: Build binary
        run: ${{ matrix.build_cmd }}
      - name: Pack output
        run: ${{ matrix.compress_cmd }} ${{ matrix.asset_name }} api
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref_name }}
          overwrite: true
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./cmd/api/Dockerfile
          push: true
          tags: textile/tableland:latest,textile/tableland:${{ github.ref_name }}
          platforms: linux/amd64, linux/arm64
  js-release:
    runs-on: ubuntu-latest
    steps:
      - name: PR to publish this release via the npm package
        uses: actions/github-script@v6
        with:
          # TODO: I think we will need a token with greater permission than this,
          #       maybe TEXTILEIO_MACHINE_ACCESS_TOKEN will work?
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'tablelandnetwork',
              repo: 'js-validator',
              workflow_id: 'release-pr.yml',
              ref: 'main',
              inputs: {
                release_version: ${{ github.ref_name }}
              }
            }).catch(error => error).then(response => {
              core.debug(response);
              if (response.status !== 204) {
                core.setFailed(`create workflow_dispatch received status code ${response.status}`);
              }
            });
