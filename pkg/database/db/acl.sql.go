// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: acl.sql

package db

import (
	"context"
)

const getAclByTableAndController = `-- name: GetAclByTableAndController :one
SELECT table_id, controller, privileges, chain_id, created_at, updated_at FROM system_acl WHERE chain_id = ?1 AND table_id = ?2 AND upper(controller) LIKE upper(?3)
`

type GetAclByTableAndControllerParams struct {
	ChainID int64
	TableID int64
	UPPER   string
}

func (q *Queries) GetAclByTableAndController(ctx context.Context, arg GetAclByTableAndControllerParams) (SystemAcl, error) {
	row := q.queryRow(ctx, q.getAclByTableAndControllerStmt, getAclByTableAndController, arg.ChainID, arg.TableID, arg.UPPER)
	var i SystemAcl
	err := row.Scan(
		&i.TableID,
		&i.Controller,
		&i.Privileges,
		&i.ChainID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
